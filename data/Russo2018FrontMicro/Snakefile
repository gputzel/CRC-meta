configfile: "config.json"

SRP=config['SRP']

#rule download_runinfo:
#    output:
#        "sample_data/runinfo.csv"
#    shell:
#        'esearch -db sra -query "{SRP}" | efetch -format runinfo > sample_data/runinfo.csv'

rule download_xml:
    output:
        "sample_data/sra-info.xml"
    conda:
        "envs/entrez-direct.yaml"
    shell:
        'esearch -db sra -query "{SRP}" | efetch -format summary | xmllint --format - > sample_data/sra-info.xml'

rule get_sample_info:
    input:
        "sample_data/sra-info.xml"
    output:
        "sample_data/sample_info.csv"
    conda:
        "envs/get_sample_info.yaml"
    script:
        "scripts/get_sample_info.py"

rule join_sample_data:
    input:
        "sample_data/sample_info.csv",
        "sample_data/table1.tsv"
    output:
        "sample_data/merged_sample_data.tsv"
    conda:
        "envs/r-env.yaml"
    script:
        "scripts/join_sample_data.R"

rule select_samples:
    input:
        "sample_data/merged_sample_data.tsv"
    output:
        "sample_data/merged_sample_data_subset.tsv"
    conda:
        "envs/r-env.yaml"
    script:
        "scripts/select_samples.R"

rule download_sra:
    input:
        "sample_data/merged_sample_data_subset.tsv"
    output:
        "FASTQ"
    conda:
        "envs/sra-tools.yaml"
    shell:
        "scripts/download_sra.sh"

rule clear_fastq:
    input:
        "FASTQ"
    shell:
        "rm -r FASTQ"

rule fastqc:
    input:
        "FASTQ"
    output:
        "FASTQC/"
    conda:
        "envs/fastqc.yaml"
    shell:
        "scripts/fastqc.sh"

rule rename_fastq:
    input:
        "FASTQ"
    output:
        "FASTQ_renamed/"
    shell:
        "scripts/rename_fastq.sh"

rule qiime2_import:
    input:
        "FASTQ_renamed/"
    output:
        "qiime2/fastq.qza"
    conda:
        "envs/qiime2-2018.2-py35-osx-conda.yml"
    shell:
        "scripts/qiime2_import.sh"

rule qiime2_dada2:
    input:
        "qiime2/fastq.qza"
    output:
        "qiime2/dada2/table.qza",
        "qiime2/dada2/rep_seqs.qza"
    conda:
        "envs/qiime2-2018.2-py35-osx-conda.yml"
    shell:
        "scripts/qiime2_dada2.sh"
